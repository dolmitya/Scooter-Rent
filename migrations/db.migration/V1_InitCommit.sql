create table users
(
    id       bigint generated by default as identity primary key,
    username varchar(100) not null unique,
    password varchar(255) not null,
    number_phone varchar(11),
    balance DOUBLE PRECISION
);

create table roles
(
    id   int generated by default as identity primary key,
    name varchar(50) not null
);

CREATE TABLE users_roles
(
    user_id bigint not null,
    role_id int    not null,
    primary key (user_id, role_id),
    foreign key (user_id) references users (id),
    foreign key (role_id) references roles (id)
);

create table scooters
(
    id         bigint generated by default as identity primary key,
    model      varchar(200) not null,
    latitude DOUBLE PRECISION,
    longitude DOUBLE PRECISION,
    status   varchar(10) not null check (status in ('BUSY', 'FREE', 'BROKEN'))
);

create table trip
(
    id       bigint generated by default as identity primary key,
    scooter_id bigint not null,
    user_id  bigint not null,
    start_time timestamp not null,
    end_time   timestamp not null,
    start_latitude DOUBLE PRECISION,
    start_longitude DOUBLE PRECISION,
    end_latitude DOUBLE PRECISION,
    end_longitude DOUBLE PRECISION,
    price_per_minute DOUBLE PRECISION,
    constraint event_participants_event_id_fk foreign key (scooter_id) references scooters on delete cascade,
    constraint event_participants_user_id_fk foreign key (user_id) references users on delete cascade,
    constraint check_event_dates check (start_time < end_time)
);

--insert into roles (name)
--values ('ROLE_USER'),
--      ('ROLE_ADMIN');

--insert into users (username, password)
--values
--    ('admin', '$2a$04$Fx/SX9.BAvtPlMyIIqqFx.hLY2Xp8nnhpzvEEVINvVpwIPbA3v/.i');

--insert into users_roles (user_id, role_id)
--values
--    ((SELECT id FROM users WHERE username='admin'), (SELECT id FROM roles WHERE name='ROLE_ADMIN'));